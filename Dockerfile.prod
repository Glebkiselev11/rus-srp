# Stage 1: Build Rust backend
FROM rust:latest as rust-builder

# Create app directory
WORKDIR /usr/src/myapp

# Copy Rust project files
COPY server/Cargo.toml server/Cargo.lock ./
COPY server/diesel.toml ./

# Cache dependencies
RUN mkdir src && echo "fn main() {}" > src/main.rs
RUN cargo fetch
RUN cargo install diesel_cli --no-default-features --features postgres

# Copy source code and build
COPY server/src ./src
COPY server/migrations ./migrations
RUN cargo build --release

# Stage 2: Build Vue frontend
FROM node:current-slim as vue-builder

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json
COPY frontend/package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the Vue app and build it
COPY frontend/ ./
RUN npm run build

# Final stage: Create the runtime image
FROM debian:latest

# Install runtime dependencies
RUN apt-get update -y && apt-get install bash postgresql-15 ca-certificates curl libpq-dev libwayland-dev -y

WORKDIR /usr/local/bin

# Copy the built Rust executable
COPY --from=rust-builder /usr/src/myapp/target/release/server .
COPY --from=rust-builder /usr/local/cargo/bin/diesel /usr/local/bin/diesel
COPY --from=rust-builder /usr/src/myapp/migrations ./migrations

# Copy the built Vue app to the directory from which your Rust server will serve static files
COPY --from=vue-builder /app/dist ./static

# Run the server
CMD diesel migration run && ./server
